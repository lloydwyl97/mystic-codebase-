from typing import Any, Dict, List, Union

class DataFrame:
    def __init__(self, data: Any = None, **kwargs: Any) -> None: ...
    def head(self, n: int = 5) -> 'DataFrame': ...
    def tail(self, n: int = 5) -> 'DataFrame': ...
    def copy(self) -> 'DataFrame': ...
    def sort_values(self, by: Union[str, List[str]], **kwargs: Any) -> 'DataFrame': ...
    def apply(self, func: Any, **kwargs: Any) -> 'DataFrame': ...
    def notna(self) -> 'DataFrame': ...
    def empty(self) -> bool: ...
    def to_dict(self) -> Dict[str, Any]: ...
    def to_json(self) -> str: ...
    def to_csv(self, path: str, **kwargs: Any) -> None: ...
    
    @property
    def columns(self) -> List[str]: ...
    
    @property
    def index(self) -> Any: ...
    
    @property
    def shape(self) -> tuple: ...

class Series:
    def __init__(self, data: Any = None, **kwargs: Any) -> None: ...
    def apply(self, func: Any) -> 'Series': ...
    def cumsum(self) -> 'Series': ...
    def notna(self) -> 'Series': ...
    def dt(self) -> Any: ...
    def strftime(self, format: str) -> 'Series': ...

def to_datetime(arg: Any, **kwargs: Any) -> Union[Series, Any]: ...
def notna(obj: Any) -> bool: ... 