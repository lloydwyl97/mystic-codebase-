name: Code Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  code-quality:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run Black (code formatting)
      run: black --check --line-length=120 .

    - name: Run isort (import sorting)
      run: isort --check-only --profile=black .

    - name: Run Flake8 (code style)
      run: flake8 --max-line-length=120 --extend-ignore=E203,W503 .

    - name: Run MyPy (type checking)
      run: mypy --ignore-missing-imports .

    - name: Run Bandit (security)
      run: bandit -r . -f json -o bandit-report.json

    - name: Run Vulture (dead code)
      run: vulture . --min-confidence 80

    - name: Run Radon (complexity)
      run: radon cc . -a -s

    - name: Run tests with coverage
      run: |
        coverage run -m pytest --tb=short -v
        coverage report --show-missing

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload Bandit report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: bandit-security-report
        path: bandit-report.json

  security-scan:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Run Safety check
      run: |
        pip install safety
        safety check --json --output safety-report.json

    - name: Upload Safety report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: safety-vulnerability-report
        path: safety-report.json

  performance-test:
    runs-on: ubuntu-latest
    needs: code-quality

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Run performance tests
      run: |
        python scripts/code_quality.py
        python test_optimizations.py

    - name: Upload performance report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: performance-report
        path: |
          quality-report.json
          bandit-report.json
