[tool.poetry]
name = "mystic-trading-app"
version = "1.0.0"
description = "Autonomous crypto trading platform with real-time signals, AI strategies, and live exchange execution (Binance, Coinbase, Mystic)."
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "backend"}]

[tool.poetry.dependencies]
python = ">=3.10,<3.12"

# --- FastAPI Core ---
fastapi = "0.104.1"
uvicorn = { extras = ["standard"], version = "0.24.0" }
starlette = "0.27.0"
aiofiles = "23.2.1"

# --- Auth & Security ---
python-jose = { extras = ["cryptography"], version = "3.3.0" }
PyJWT = "2.8.0"
python-multipart = "0.0.6"
authlib = "1.3.0"

# --- Networking & HTTP ---
httpx = "0.25.2"
aiohttp = "3.9.1"
requests = "2.31.0"
websockets = "12.0"

# --- Env Config ---
python-dotenv = "1.0.0"
python-decouple = "3.8"

# --- Pydantic Schema ---
pydantic = "2.5.2"

# --- Rate Limiting ---
slowapi = "0.1.8"

# --- Caching & Queuing ---
redis = "5.0.1"
rq = "1.15.1"
pika = "1.3.2"

# --- ORM (Optional) ---
sqlalchemy = "2.0.23"
databases = "^0.9.0"

# --- Logging & Monitoring ---
structlog = "23.2.0"
loguru = "0.7.2"
prometheus-fastapi-instrumentator = "6.1.0"
prometheus-client = "0.19.0"
psutil = "5.9.6"

# --- AI/ML/Data - Python 3.11 compatible ---
numpy = "1.24.3"
pandas = "2.0.3"
scikit-learn = "1.3.0"
scipy = "1.11.1"
orjson = "3.9.10"
python-dateutil = "2.8.2"

# --- TA & Analysis ---
# ta = "0.10.2"  # Removed - using custom implementations

# --- Live Exchange APIs ---
ccxt = "4.1.77"
python-binance = "1.0.19"
coinbase = "2.1.0"

# --- Infra & DevOps ---
python-consul = "1.1.0"
hvac = "1.1.0"
minio = "7.2.0"
influxdb-client = "1.38.0"
boto3 = "1.34.55"
secure = "0.3.0"
httptools = "0.6.0"
apscheduler = "3.10.4"

[tool.poetry.group.dev.dependencies]
black = "23.11.0"
flake8 = "6.1.0"
mypy = "1.7.1"
isort = "5.12.0"
pytest = "7.4.3"
pytest-asyncio = "0.21.1"
pytest-cov = "4.1.0"
pre-commit = "3.5.0"

[tool.poetry.group.test.dependencies]
pytest = "7.4.3"
pytest-asyncio = "0.21.1"
pytest-cov = "4.1.0"
httpx = "0.25.2"
factory-boy = "3.3.0"

[tool.poetry.scripts]
mystic-trading = "backend.main:app"
start-dev = "uvicorn backend.main:app --reload --host 0.0.0.0 --port 8000"
start-prod = "uvicorn backend.main:app --host 0.0.0.0 --port 8000 --workers 4"
test = "pytest"
lint = "flake8 backend --max-line-length=120 --ignore=E501,W503"
format = "black backend --line-length=120"
type-check = "mypy backend"

[build-system]
requires = ["poetry-core>=1.5.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "binance.*",
    "coinbase.*",
    "redis.*",
    "pika.*",
    "sqlalchemy.*",
    "prometheus_client.*",
    "structlog.*",
    "loguru.*",
    # "ta.*",  # Removed - using custom implementations
    "scikit-learn.*",
    "scipy.*",
    "pandas.*",
    "numpy.*",
    "boto3.*",
    "minio.*",
    "influxdb_client.*",
    "hvac.*",
    "consul.*",
    "apscheduler.*",
    "httptools.*",
    "secure.*",
    "orjson.*",
    "python_dateutil.*",
    "authlib.*",
    "python_jose.*",
    "PyJWT.*",
    "python_multipart.*",
    "slowapi.*",
    "rq.*",
    "databases.*",
    "prometheus_fastapi_instrumentator.*",
    "psutil.*",
    "httpx.*",
    "aiofiles.*",
    "starlette.*",
    "python_decouple.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/migrations/*",
    "*/stubs/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.flake8]
max-line-length = 120
extend-ignore = ["E501", "W503", "E203", "W291", "W292", "W293"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    "*.egg-info",
    "venv",
    ".venv",
    "node_modules",
    "migrations"
]
per-file-ignores = [
    "__init__.py:F401",
    "*/stubs/*:F401",
    "*/mocks.py:F401"
]
